<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sap="http://www.mulesoft.org/schema/mule/sap" 
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.7.1" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	 <flow name="mainFlow"  doc:description="This flow is the entry point to the Template business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.">
        <flow-ref name="gatherDataFlow" doc:name="Call gatherDataFlow"/>
 
        <flow-ref name="formatOutputFlow" doc:name="Call formatOutputFlow"/>
        <flow-ref name="outboundFlow" doc:name="Call outboundFlow"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
  
    <flow name="gatherDataFlow" >
        <scatter-gather doc:name="Scatter-Gather">
            <custom-aggregation-strategy class="org.mule.templates.transformers.OpportunityMergeAggregationStrategy"/>
            <sfdc:query config-ref="Salesforce" query="dsql:SELECT Id, Probability, Name, Amount FROM Opportunity" doc:name="Query all opportunities from SalesForce"/>
            <processor-chain>
                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="ISA_SALESDOCUMENTS_SEARCH_NEW" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="SAP">
                    <sap:definition><![CDATA[<ISA_SALESDOCUMENTS_SEARCH_NEW>
	<import>
		<CUSTOMER_NUMBER>0000001175</CUSTOMER_NUMBER>
	</import>
</ISA_SALESDOCUMENTS_SEARCH_NEW>
]]></sap:definition>
                </sap:outbound-endpoint>
				<dw:transform-message doc:name="Transform ISA_SALESDOCUMENTS_SEARCH_NEW to BAPI_ISAORDER_GETDETAILEDLIST">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
{
	"BAPI_ISAORDER_GETDETAILEDLIST": {
		import: {
			"I_BAPI_VIEW": {
				"STATUS_H": "X",
				TEXT: "X"
			}
		},
		tables: {			
			"SALES_DOCUMENTS": {
				(payload."ISA_SALESDOCUMENTS_SEARCH_NEW".tables."STATUS_DATA".*row map {
					row: {
						VBELN: $.VBELN
					}
				})				
			}
		}
	}
}]]></dw:set-payload>
                </dw:transform-message>


                <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_ISAORDER_GETDETAILEDLIST" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="Query all sales orders from SAP"/>

                <dw:transform-message doc:name="Transform BAPI_ISAORDER_GETDETAILEDLIST to Sales Data">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
StatusHeaders: payload."BAPI_ISAORDER_GETDETAILEDLIST".tables."ORDER_STATUSHEADERS_OUT".*row map {
		Status: $."ISA_DOC_STATUS",
		Id: $."SD_DOC"
	},
TextHeaders: payload."BAPI_ISAORDER_GETDETAILEDLIST".tables."ORDER_TEXTHEADERS_OUT".*row map {
		Id : $.SD_DOC,
		TextName : $.TEXT_NAME
	},
TextLines: payload."BAPI_ISAORDER_GETDETAILEDLIST".tables."ORDER_TEXTLINES_OUT".*row map {
		Line : $.LINE,
		TextName : $.TEXT_NAME
	}	
}]]></dw:set-payload>
                </dw:transform-message>


            </processor-chain>
        </scatter-gather>

    </flow>
    
    <flow name="formatOutputFlow" >
        <custom-transformer class="org.mule.templates.transformers.SortOpportunityList" doc:name="Custom component to sort opportunity list"/>
        <dw:transform-message doc:name="Transform Collection of Maps to CSV Format">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/csv header=true, quoteValues=true
---
payload]]></dw:set-payload>
        </dw:transform-message>

        <object-to-string-transformer doc:name="CSV Output Object to String"/>
    </flow>
</mule>
