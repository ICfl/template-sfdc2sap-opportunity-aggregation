<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"  xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
xmlns:json="http://www.mulesoft.org/schema/mule/json" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.7.1" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
<sub-flow name="createOpportunitiesInSalesforceFlow" >
        <sfdc:create config-ref="Salesforce" type="Opportunity" doc:name="Salesforce">

        </sfdc:create>
    </sub-flow>
    <flow name="createSalesOrdersInSapFlow" >
        <collection-splitter doc:name="Collection Splitter"/>
        <processor-chain doc:name="Processor Chain">
            <expression-component doc:name="Set OportunityLineItems in the payload"><![CDATA[payload['OpportunityLineItems'] = ['record' : [ 'Quantity' : '1',  'ITM_NUMBER' : '000010', 'PricebookEntry' : ['Product2' : ['sap_external_id' : 'MM-01']]]]]]></expression-component>
<!--             <data-mapper:transform config-ref="Opportunity_to_BAPI_SALESORDER_CREATEFROMDAT2" doc:name="Opportunity to BAPI_SALESORDER_CREATEFROMDAT2"/> -->
            <dw:transform-message doc:name="Opportunity to BAPI_SALESORDER_CREATEFROMDAT2">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
---
using (oppLineItem = payload.OpportunityLineItems.record) {
	"BAPI_SALESORDER_CREATEFROMDAT2": {
		
		import: {
			"ORDER_HEADER_IN": {
				"DOC_TYPE": "TA",
				"PURCH_NO_C": payload.Id				
			}
		},
		tables: {
			"ORDER_ITEMS_IN": {
				row: {
					"ITM_NUMBER": oppLineItem.ITM_NUMBER,
					MATERIAL: oppLineItem.PricebookEntry.Product2.sap_external_id__c,
					"TARGET_QTY": oppLineItem.Quantity
				}
			},			
			"ORDER_ITEMS_INX": {
				row: {
					"ITM_NUMBER": oppLineItem.ITM_NUMBER,
					UPDATEFLAG: "I",
					MATERIAL: "X"
				}
			},			
			"ORDER_PARTNERS": {
				row: {
					"PARTN_ROLE": "AG",
					"PARTN_NUMB": "0000001175"					
				}
			},
			"ORDER_SCHEDULES_IN": {
				row: {
					"ITM_NUMBER": oppLineItem.ITM_NUMBER,
					"REQ_QTY": oppLineItem.Quantity
				}
			},			
			"ORDER_TEXT": {
				row: {
					"TEXT_ID": "0001",
					LANGU: "EN",
					"TEXT_LINE": payload.Name
				}
			}
		}
	}
}]]></dw:set-payload>
            </dw:transform-message>
            <logger level="INFO" metadata:id="f430dd1f-6c60-4902-9159-56bf1a7c6924" doc:name="Logger"/>
            <byte-array-to-string-transformer doc:name="Byte Array to String"/>
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_CREATEFROMDAT2" xmlVersion="2" outputXml="true" evaluateFunctionResponse="true" responseTimeout="10000" doc:name="Upsert Sales Order to SAP" bapiTransaction="true"/>
<!--             <data-mapper:transform config-ref="BAPI_SALESORDER_CREATEFROMDAT2_to_Document_Number_Wrapper" doc:name="BAPI_SALESORDER_CREATEFROMDAT2 to Document Number Wrapper"/> -->
<!--             <data-mapper:transform config-ref="Opportunity_to_BAPI_SALESORDER_CREATEFROMDAT2" doc:name="Copy_of_Opportunity to BAPI_SALESORDER_CREATEFROMDAT2"/> -->
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	DocumentNumber : payload.BAPI_SALESORDER_CREATEFROMDAT2.export.SALESDOCUMENT
}]]></dw:set-payload>
            </dw:transform-message>

            <set-payload value="#[payload['DocumentNumber']]" doc:name="Set Payload"/>
        </processor-chain>
        <collection-aggregator failOnTimeout="true" doc:name="Collection Aggregator"/>
    </flow>
    <sub-flow name="deleteOpportunitiesFromSalesforceFlow" >
        <sfdc:delete config-ref="Salesforce" doc:name="Salesforce">

        </sfdc:delete>
    </sub-flow>
    <sub-flow name="deleteSalesOrdersFromSapFlow" >
        <foreach doc:name="For Each">
            <logger level="INFO" doc:name="Logger"/>
            <sap:outbound-endpoint exchange-pattern="request-response" connector-ref="SAP" type="function" functionName="BAPI_SALESORDER_CHANGE" xmlVersion="2" outputXml="true" responseTimeout="10000" doc:name="Delete Sales Order from SAP" bapiTransaction="true" evaluateFunctionResponse="true">
                <sap:definition><![CDATA[<BAPI_SALESORDER_CHANGE>
	<import>
		<SALESDOCUMENT>#[payload]</SALESDOCUMENT>
		<ORDER_HEADER_INX>
			<UPDATEFLAG>D</UPDATEFLAG>
		</ORDER_HEADER_INX>
	</import>
</BAPI_SALESORDER_CHANGE>]]></sap:definition>

            </sap:outbound-endpoint>
        </foreach>
    </sub-flow>
    

</mule>
